version: '3.8'

services:
  django-app:
    build: 
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
    expose:
      - "8000"
    env_file:
      - .env
    ports:
      - "8000:8000"
    environment:
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=db
      - DB_PORT=5432
  
  #nginx:
  #  image: nginx:alpine
  #  volumes:
  #    - ./nginx.conf:/etc/nginx/nginx.conf
  #    - static_volume:/app/static
  #    - media_volume:/app/media
  #  ports:
  #    - "80:80"
  
  db:
    image: postgres:14.8-alpine3.18
    command:
     
    env_file:
      - .env
    environment:
      - POSTGRES_DB: ${DB_NAME}
      - POSTGRES_USER: ${DB_USER}
      - POSTGRES_PASSWORD: ${DB_PASSWORD}
      - PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - ./init:/docker-entrypoint-initdb.d
      - pg_sql-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2G

volumes:
  static_volume:
  media_volume: